[project]
name = "bekillyapp"
version = "1.0.0"
description = "ExtracciÃ³n RCV SII automatizada (BekillyAPP)"
authors = [{ name = "BeKilly", email = "info@bekilly.com" }]
readme = "README.md"
requires-python = ">=3.11"
dependencies = [
  "selenium>=4.20.0",
  "pandas>=2.2.0",
  "pyyaml>=6.0.1",
  "openpyxl>=3.1.2"
]

[project.optional-dependencies]
dev = [
  "pytest>=8.0.0",
  "pytest-cov>=5.0.0",
  "ruff>=0.5.0",
  "black>=24.3.0",
  "mypy>=1.10.0",
  "pre-commit>=3.7.0",
  "types-PyYAML"
]

# Expone un comando global "bekilly-sii"
# -> ejecuta conciliacion.sii.main:cli_entry
[project.scripts]
bekilly-sii = "conciliacion.sii.main:cli_entry"

[build-system]
requires = ["setuptools>=68", "wheel"]
build-backend = "setuptools.build_meta"

# Layout src/
[tool.setuptools]
package-dir = {"" = "src"}

[tool.setuptools.packages.find]
where = ["src"]
include = ["conciliacion*"]

# Incluir YAML de ejemplo y otros assets en la rueda
[tool.setuptools.package-data]
"conciliacion" = [
  "**/*.yaml",
  "**/*.yml",
  "**/*.json"
]

[tool.ruff]
line-length = 100
target-version = "py311"
select = ["E","F","W","I","B","UP","Q"]
ignore = ["E501"]

[tool.black]
target-version = ["py311"]
line-length = 100

[tool.pytest.ini_options]
pythonpath = ["src"]
addopts = "-q"
testpaths = ["tests"]
